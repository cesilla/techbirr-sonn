{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\TechBirr\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\n// src/components/WalletConnector.js\nimport React, { useEffect, useState } from 'react';\nimport { TonConnect, Wallet } from '@tonconnect/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const tonConnect = new TonConnect();\n  useEffect(() => {\n    // Check if a wallet is already connected\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const wallet = await tonConnect.connect();\n      const walletData = {\n        account: wallet.account,\n        balance: await wallet.getBalance()\n      };\n      setWallet(wallet);\n      setAddress(wallet.account.address);\n      setBalance(walletData.balance);\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      onConnectWallet();\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    tonConnect.disconnect();\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n    localStorage.removeItem('wallet');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected wallet address: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect with Ton Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"gFxw80a+jHr1naqnWPSKH8SE6JA=\");\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","TonConnect","Wallet","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","wallet","setWallet","address","setAddress","balance","setBalance","tonConnect","storedWallet","localStorage","getItem","walletData","JSON","parse","account","connectWallet","connect","getBalance","setItem","stringify","error","console","disconnectWallet","disconnect","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/WalletConnector.js"],"sourcesContent":["// src/components/WalletConnector.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TonConnect, Wallet } from '@tonconnect/sdk';\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n\r\n  const tonConnect = new TonConnect();\r\n\r\n  useEffect(() => {\r\n    // Check if a wallet is already connected\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n  }, []);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const wallet = await tonConnect.connect();\r\n      const walletData = {\r\n        account: wallet.account,\r\n        balance: await wallet.getBalance(),\r\n      };\r\n      setWallet(wallet);\r\n      setAddress(wallet.account.address);\r\n      setBalance(walletData.balance);\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet();\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    tonConnect.disconnect();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {wallet ? (\r\n        <div>\r\n          <p>Connected wallet address: {address}</p>\r\n          <p>Your balance: {balance}</p>\r\n          <button onClick={disconnectWallet}>Disconnect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet}>Connect with Ton Wallet</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}