{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\TechBirr\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\n// src/components/WalletConnector.js\nimport React, { useEffect, useState } from 'react';\nimport TonConnect, { Wallet } from '@tonconnect/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  useEffect(() => {\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const tonConnect = new TonConnect();\n      const wallet = await tonConnect.connect({\n        jsBridgeKey: 'tonkeeper' // Kullanacağınız cüzdan uygulamasına uygun değeri burada belirtin\n      });\n      const balance = await wallet.getBalance();\n      const walletData = {\n        account: wallet.account,\n        balance\n      };\n      setWallet(walletData);\n      setAddress(wallet.account.address);\n      setBalance(balance);\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      onConnectWallet();\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    localStorage.removeItem('wallet');\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ba\\u011Fl\\u0131 c\\xFCzdan adresi: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bakiyeniz: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"C\\xFCzdan Ba\\u011Flant\\u0131s\\u0131n\\u0131 Kes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Ton Wallet ile Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"gFxw80a+jHr1naqnWPSKH8SE6JA=\");\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","TonConnect","Wallet","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","wallet","setWallet","address","setAddress","balance","setBalance","storedWallet","localStorage","getItem","walletData","JSON","parse","account","connectWallet","tonConnect","connect","jsBridgeKey","getBalance","setItem","stringify","error","console","disconnectWallet","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/WalletConnector.js"],"sourcesContent":["// src/components/WalletConnector.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport TonConnect, { Wallet } from '@tonconnect/sdk';\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n  }, []);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const tonConnect = new TonConnect();\r\n      const wallet = await tonConnect.connect({\r\n        jsBridgeKey: 'tonkeeper', // Kullanacağınız cüzdan uygulamasına uygun değeri burada belirtin\r\n      });\r\n\r\n      const balance = await wallet.getBalance();\r\n      const walletData = {\r\n        account: wallet.account,\r\n        balance,\r\n      };\r\n\r\n      setWallet(walletData);\r\n      setAddress(wallet.account.address);\r\n      setBalance(balance);\r\n\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet();\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    localStorage.removeItem('wallet');\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {wallet ? (\r\n        <div>\r\n          <p>Bağlı cüzdan adresi: {address}</p>\r\n          <p>Bakiyeniz: {balance}</p>\r\n          <button onClick={disconnectWallet}>Cüzdan Bağlantısını Kes</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet}>Ton Wallet ile Giriş Yap</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}