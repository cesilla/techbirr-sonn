{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\TechBirr\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TonConnect from '@tonconnect/sdk'; // TON Connect SDK'sını import ediyoruz\nimport './WalletConnector.css'; // CSS dosyasını import ediyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const navigate = useNavigate();\n  const tonConnect = async () => {\n    try {\n      const connector = new TonConnect();\n      await connector.connect(); // manifest URL olmadan bağlanma\n      const wallet = await connector.restoreConnection();\n      return wallet;\n    } catch (error) {\n      console.error('TON Wallet connection failed', error);\n      return null;\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      // Cüzdan bağlama kodu buraya gelecek (TON cüzdan entegrasyonu)\n      const wallet = await tonConnect();\n      if (wallet) {\n        setIsConnected(true);\n        onConnectWallet(wallet);\n        navigate('/main'); // Başarılı bağlantıdan sonra ana sayfaya yönlendir\n      }\n    } catch (error) {\n      console.error('Wallet connection failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connector slide-in-bottom\",\n    children: !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"connected-message\",\n      children: \"Wallet Connected!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"iiaDzzX7gMANiN9YlSZYLeDv+e8=\", false, function () {\n  return [useNavigate];\n});\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useState","useNavigate","TonConnect","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","isConnected","setIsConnected","navigate","tonConnect","connector","connect","wallet","restoreConnection","error","console","connectWallet","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/WalletConnector.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TonConnect from '@tonconnect/sdk'; // TON Connect SDK'sını import ediyoruz\r\nimport './WalletConnector.css'; // CSS dosyasını import ediyoruz\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const navigate = useNavigate();\r\n  \r\n  const tonConnect = async () => {\r\n    try {\r\n      const connector = new TonConnect();\r\n      await connector.connect(); // manifest URL olmadan bağlanma\r\n      const wallet = await connector.restoreConnection();\r\n      return wallet;\r\n    } catch (error) {\r\n      console.error('TON Wallet connection failed', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      // Cüzdan bağlama kodu buraya gelecek (TON cüzdan entegrasyonu)\r\n      const wallet = await tonConnect();\r\n      if (wallet) {\r\n        setIsConnected(true);\r\n        onConnectWallet(wallet);\r\n        navigate('/main'); // Başarılı bağlantıdan sonra ana sayfaya yönlendir\r\n      }\r\n    } catch (error) {\r\n      console.error('Wallet connection failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallet-connector slide-in-bottom\">\r\n      {!isConnected ? (\r\n        <button className=\"connect-button\" onClick={connectWallet}>\r\n          Connect Wallet\r\n        </button>\r\n      ) : (\r\n        <p className=\"connected-message\">Wallet Connected!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,iBAAiB,CAAC,CAAC;AAC1C,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,SAAS,GAAG,IAAIV,UAAU,CAAC,CAAC;MAClC,MAAMU,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3B,MAAMC,MAAM,GAAG,MAAMF,SAAS,CAACG,iBAAiB,CAAC,CAAC;MAClD,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF;MACA,MAAMJ,MAAM,GAAG,MAAMH,UAAU,CAAC,CAAC;MACjC,IAAIG,MAAM,EAAE;QACVL,cAAc,CAAC,IAAI,CAAC;QACpBH,eAAe,CAACQ,MAAM,CAAC;QACvBJ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACrB;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,kCAAkC;IAAAC,QAAA,EAC9C,CAACZ,WAAW,gBACXJ,OAAA;MAAQe,SAAS,EAAC,gBAAgB;MAACE,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAAC;IAE3D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETrB,OAAA;MAAGe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIF,eAAe;EAAA,QAEFJ,WAAW;AAAA;AAAAyB,EAAA,GAFxBrB,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}