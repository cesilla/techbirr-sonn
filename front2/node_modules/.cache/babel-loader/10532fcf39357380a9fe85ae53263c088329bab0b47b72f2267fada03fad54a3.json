{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\TechBirr\\\\front2\\\\src\\\\components\\\\Kayit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Kayit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = {\n  en: 'English',\n  ru: 'русский',\n  tr: 'Türkçe',\n  fr: 'Français',\n  ar: 'العربية',\n  zh: '中文',\n  de: 'Deutsch',\n  kk: 'Қазақ',\n  az: 'Azərbaycan'\n};\nconst languagePrompts = {\n  en: 'Choose your language',\n  ru: 'Выберите ваш язык',\n  tr: 'Dil Seçiniz',\n  fr: 'Choisissez votre langue',\n  ar: 'اختر لغتك',\n  zh: '选择你的语言',\n  de: 'Wähle deine Sprache',\n  kk: 'Тіліңізді таңдаңыз',\n  az: 'Dil seçin'\n};\nconst Kayit = () => {\n  _s();\n  const [currentLanguagePrompt, setCurrentLanguagePrompt] = useState(languagePrompts.en);\n  const languageKeys = Object.keys(languages);\n  let languageIndex = 0;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentLanguagePrompt(languagePrompts[languageKeys[languageIndex]]);\n      languageIndex = (languageIndex + 1) % languageKeys.length;\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleLanguageSelect = language => {\n    localStorage.setItem('selectedLanguage', language);\n    navigate('/main', {\n      state: {\n        language\n      }\n    }); // Redirect to MainPage with the selected language\n  };\n  const backgroundImage = window.innerWidth <= 768 ? '/kayit/Kayıtt.png' : '/kayit/Arkaplan.png';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/kayit/logoo.png\",\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-language\",\n      children: currentLanguagePrompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-container\",\n      children: languageKeys.slice(0, 8).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect(key),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: languages[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra-language-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect(languageKeys[8]),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: languages[languageKeys[8]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Kayit, \"SFXLvFGpWynyzzW4JXw/n364Umw=\", false, function () {\n  return [useNavigate];\n});\n_c = Kayit;\nexport default Kayit;\nvar _c;\n$RefreshReg$(_c, \"Kayit\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","languages","en","ru","tr","fr","ar","zh","de","kk","az","languagePrompts","Kayit","_s","currentLanguagePrompt","setCurrentLanguagePrompt","languageKeys","Object","keys","languageIndex","navigate","interval","setInterval","length","clearInterval","handleLanguageSelect","language","localStorage","setItem","state","backgroundImage","window","innerWidth","className","style","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/Kayit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Kayit.css';\r\n\r\nconst languages = {\r\n  en: 'English',\r\n  ru: 'русский',\r\n  tr: 'Türkçe',\r\n  fr: 'Français',\r\n  ar: 'العربية',\r\n  zh: '中文',\r\n  de: 'Deutsch',\r\n  kk: 'Қазақ',\r\n  az: 'Azərbaycan'\r\n};\r\n\r\nconst languagePrompts = {\r\n  en: 'Choose your language',\r\n  ru: 'Выберите ваш язык',\r\n  tr: 'Dil Seçiniz',\r\n  fr: 'Choisissez votre langue',\r\n  ar: 'اختر لغتك',\r\n  zh: '选择你的语言',\r\n  de: 'Wähle deine Sprache',\r\n  kk: 'Тіліңізді таңдаңыз',\r\n  az: 'Dil seçin'\r\n};\r\n\r\nconst Kayit = () => {\r\n  const [currentLanguagePrompt, setCurrentLanguagePrompt] = useState(languagePrompts.en);\r\n  const languageKeys = Object.keys(languages);\r\n  let languageIndex = 0;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentLanguagePrompt(languagePrompts[languageKeys[languageIndex]]);\r\n      languageIndex = (languageIndex + 1) % languageKeys.length;\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleLanguageSelect = (language) => {\r\n    localStorage.setItem('selectedLanguage', language);\r\n    navigate('/main', { state: { language } }); // Redirect to MainPage with the selected language\r\n  };\r\n\r\n  const backgroundImage = window.innerWidth <= 768 ? '/kayit/Kayıtt.png' : '/kayit/Arkaplan.png';\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\r\n      <img src=\"/kayit/logoo.png\" alt=\"Logo\" className=\"logo\" />\r\n      <div className=\"current-language\">{currentLanguagePrompt}</div>\r\n      <div className=\"language-container\">\r\n        {languageKeys.slice(0, 8).map((key) => (\r\n          <button\r\n            key={key}\r\n            className=\"language-button\"\r\n            onClick={() => handleLanguageSelect(key)}\r\n          >\r\n            <span className=\"language-text\">{languages[key]}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"extra-language-button\">\r\n        <button\r\n          className=\"language-button\"\r\n          onClick={() => handleLanguageSelect(languageKeys[8])}\r\n        >\r\n          <span className=\"language-text\">{languages[languageKeys[8]]}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kayit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}