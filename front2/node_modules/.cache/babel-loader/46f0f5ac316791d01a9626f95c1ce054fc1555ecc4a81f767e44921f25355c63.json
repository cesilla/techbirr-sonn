{"ast":null,"code":"import { Account, ConnectAdditionalRequest, TonProofItemReplySuccess } from \"@tonconnect/ui-react\";\nclass TonProofDemoApiService {\n  constructor() {\n    this.localStorageKey = 'demo-api-access-token';\n    this.host = 'https://demo.tonconnect.dev';\n    this.accessToken = localStorage.getItem(this.localStorageKey);\n    this.refreshIntervalMs = 9 * 60 * 1000;\n    if (!this.accessToken) {\n      this.generatePayload();\n    }\n  }\n  async generatePayload() {\n    try {\n      const response = await (await fetch(`${this.host}/ton-proof/generatePayload`, {\n        method: 'POST'\n      })).json();\n      return {\n        tonProof: response.payload\n      };\n    } catch {\n      return null;\n    }\n  }\n  async checkProof(proof, account) {\n    try {\n      const reqBody = {\n        address: account.address,\n        network: account.chain,\n        proof: {\n          ...proof,\n          state_init: account.walletStateInit\n        }\n      };\n      const response = await (await fetch(`${this.host}/ton-proof/checkProof`, {\n        method: 'POST',\n        body: JSON.stringify(reqBody)\n      })).json();\n      if (response && response.token) {\n        localStorage.setItem(this.localStorageKey, response.token);\n        this.accessToken = response.token;\n      }\n    } catch (e) {\n      console.log('checkProof error:', e);\n    }\n  }\n  async getAccountInfo(account) {\n    const response = await (await fetch(`${this.host}/dapp/getAccountInfo?network=${account.chain}`, {\n      headers: {\n        Authorization: `Bearer ${this.accessToken}`,\n        'Content-Type': 'application/json'\n      }\n    })).json();\n    return response;\n  }\n  reset() {\n    this.accessToken = null;\n    localStorage.removeItem(this.localStorageKey);\n    this.generatePayload();\n  }\n}\nexport const TonProofDemoApi = new TonProofDemoApiService();","map":{"version":3,"names":["Account","ConnectAdditionalRequest","TonProofItemReplySuccess","TonProofDemoApiService","constructor","localStorageKey","host","accessToken","localStorage","getItem","refreshIntervalMs","generatePayload","response","fetch","method","json","tonProof","payload","checkProof","proof","account","reqBody","address","network","chain","state_init","walletStateInit","body","JSON","stringify","token","setItem","e","console","log","getAccountInfo","headers","Authorization","reset","removeItem","TonProofDemoApi"],"sources":["C:/Users/ESC/Desktop/bot/techbirr-son/front2/src/components/TonProofDemoApiService.js"],"sourcesContent":["import { Account, ConnectAdditionalRequest, TonProofItemReplySuccess } from \"@tonconnect/ui-react\";\r\n\r\nclass TonProofDemoApiService {\r\n  constructor() {\r\n    this.localStorageKey = 'demo-api-access-token';\r\n    this.host = 'https://demo.tonconnect.dev';\r\n    this.accessToken = localStorage.getItem(this.localStorageKey);\r\n    this.refreshIntervalMs = 9 * 60 * 1000;\r\n\r\n    if (!this.accessToken) {\r\n      this.generatePayload();\r\n    }\r\n  }\r\n\r\n  async generatePayload() {\r\n    try {\r\n      const response = await (\r\n        await fetch(`${this.host}/ton-proof/generatePayload`, {\r\n          method: 'POST',\r\n        })\r\n      ).json();\r\n      return { tonProof: response.payload };\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async checkProof(proof, account) {\r\n    try {\r\n      const reqBody = {\r\n        address: account.address,\r\n        network: account.chain,\r\n        proof: {\r\n          ...proof,\r\n          state_init: account.walletStateInit,\r\n        },\r\n      };\r\n\r\n      const response = await (\r\n        await fetch(`${this.host}/ton-proof/checkProof`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(reqBody),\r\n        })\r\n      ).json();\r\n\r\n      if (response && response.token) {\r\n        localStorage.setItem(this.localStorageKey, response.token);\r\n        this.accessToken = response.token;\r\n      }\r\n    } catch (e) {\r\n      console.log('checkProof error:', e);\r\n    }\r\n  }\r\n\r\n  async getAccountInfo(account) {\r\n    const response = await (\r\n      await fetch(`${this.host}/dapp/getAccountInfo?network=${account.chain}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n    ).json();\r\n\r\n    return response;\r\n  }\r\n\r\n  reset() {\r\n    this.accessToken = null;\r\n    localStorage.removeItem(this.localStorageKey);\r\n    this.generatePayload();\r\n  }\r\n}\r\n\r\nexport const TonProofDemoApi = new TonProofDemoApiService();\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,wBAAwB,EAAEC,wBAAwB,QAAQ,sBAAsB;AAElG,MAAMC,sBAAsB,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,eAAe,GAAG,uBAAuB;IAC9C,IAAI,CAACC,IAAI,GAAG,6BAA6B;IACzC,IAAI,CAACC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,eAAe,CAAC;IAC7D,IAAI,CAACK,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;IAEtC,IAAI,CAAC,IAAI,CAACH,WAAW,EAAE;MACrB,IAAI,CAACI,eAAe,CAAC,CAAC;IACxB;EACF;EAEA,MAAMA,eAAeA,CAAA,EAAG;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACP,IAAI,4BAA4B,EAAE;QACpDQ,MAAM,EAAE;MACV,CAAC,CAAC,EACFC,IAAI,CAAC,CAAC;MACR,OAAO;QAAEC,QAAQ,EAAEJ,QAAQ,CAACK;MAAQ,CAAC;IACvC,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF;EAEA,MAAMC,UAAUA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC/B,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,OAAO,EAAEF,OAAO,CAACE,OAAO;QACxBC,OAAO,EAAEH,OAAO,CAACI,KAAK;QACtBL,KAAK,EAAE;UACL,GAAGA,KAAK;UACRM,UAAU,EAAEL,OAAO,CAACM;QACtB;MACF,CAAC;MAED,MAAMd,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACP,IAAI,uBAAuB,EAAE;QAC/CQ,MAAM,EAAE,MAAM;QACda,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC,EACFN,IAAI,CAAC,CAAC;MAER,IAAIH,QAAQ,IAAIA,QAAQ,CAACkB,KAAK,EAAE;QAC9BtB,YAAY,CAACuB,OAAO,CAAC,IAAI,CAAC1B,eAAe,EAAEO,QAAQ,CAACkB,KAAK,CAAC;QAC1D,IAAI,CAACvB,WAAW,GAAGK,QAAQ,CAACkB,KAAK;MACnC;IACF,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,CAAC,CAAC;IACrC;EACF;EAEA,MAAMG,cAAcA,CAACf,OAAO,EAAE;IAC5B,MAAMR,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACP,IAAI,gCAAgCc,OAAO,CAACI,KAAK,EAAE,EAAE;MACvEY,OAAO,EAAE;QACPC,aAAa,EAAE,UAAU,IAAI,CAAC9B,WAAW,EAAE;QAC3C,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,EACFQ,IAAI,CAAC,CAAC;IAER,OAAOH,QAAQ;EACjB;EAEA0B,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC/B,WAAW,GAAG,IAAI;IACvBC,YAAY,CAAC+B,UAAU,CAAC,IAAI,CAAClC,eAAe,CAAC;IAC7C,IAAI,CAACM,eAAe,CAAC,CAAC;EACxB;AACF;AAEA,OAAO,MAAM6B,eAAe,GAAG,IAAIrC,sBAAsB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}