{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\bot\\\\techbirr-son\\\\front2\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPrayers = [{\n  name: 'Fajr',\n  time: 'Sabah Namazı',\n  completed: false\n}, {\n  name: 'Dhuhr',\n  time: 'Öğle Namazı',\n  completed: false\n}, {\n  name: 'Asr',\n  time: 'İkindi Namazı',\n  completed: false\n}, {\n  name: 'Maghrib',\n  time: 'Akşam Namazı',\n  completed: false\n}, {\n  name: 'Isha',\n  time: 'Yatsı Namazı',\n  completed: false\n}];\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [prayers, setPrayers] = useState(initialPrayers);\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  };\n  const handleToggleTask = index => {\n    const updatedTasks = tasks.map((task, taskIndex) => {\n      if (taskIndex === index) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = index => {\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\n    setTasks(updatedTasks);\n  };\n  const handleTogglePrayer = index => {\n    const updatedPrayers = prayers.map((prayer, prayerIndex) => {\n      if (prayerIndex === index) {\n        return {\n          ...prayer,\n          completed: !prayer.completed\n        };\n      }\n      return prayer;\n    });\n    setPrayers(updatedPrayers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleToggleTask(index),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(index),\n          children: \"Sil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Yeni g\\xF6rev ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"G\\xFCnl\\xFCk Namazlar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: prayers.map((prayer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: prayer.completed ? 'completed' : '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleTogglePrayer(index),\n          children: prayer.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Vc+WNOdTIFJDA9pqgzsYZ53fypU=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialPrayers","name","time","completed","ToDoList","_s","tasks","setTasks","prayers","setPrayers","newTask","setNewTask","handleAddTask","trim","text","handleToggleTask","index","updatedTasks","map","task","taskIndex","handleDeleteTask","filter","_","handleTogglePrayer","updatedPrayers","prayer","prayerIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/bot/techbirr-son/front2/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ToDoList.css';\r\n\r\nconst initialPrayers = [\r\n  { name: 'Fajr', time: 'Sabah Namazı', completed: false },\r\n  { name: 'Dhuhr', time: 'Öğle Namazı', completed: false },\r\n  { name: 'Asr', time: 'İkindi Namazı', completed: false },\r\n  { name: 'Maghrib', time: 'Akşam Namazı', completed: false },\r\n  { name: 'Isha', time: 'Yatsı Namazı', completed: false }\r\n];\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [prayers, setPrayers] = useState(initialPrayers);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, { text: newTask, completed: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const handleToggleTask = (index) => {\r\n    const updatedTasks = tasks.map((task, taskIndex) => {\r\n      if (taskIndex === index) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleTogglePrayer = (index) => {\r\n    const updatedPrayers = prayers.map((prayer, prayerIndex) => {\r\n      if (prayerIndex === index) {\r\n        return { ...prayer, completed: !prayer.completed };\r\n      }\r\n      return prayer;\r\n    });\r\n    setPrayers(updatedPrayers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h3>To-Do List</h3>\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={task.completed ? 'completed' : ''}>\r\n            <span onClick={() => handleToggleTask(index)}>{task.text}</span>\r\n            <button onClick={() => handleDeleteTask(index)}>Sil</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Yeni görev ekle\"\r\n      />\r\n      <button onClick={handleAddTask}>Ekle</button>\r\n\r\n      <h3>Günlük Namazlar</h3>\r\n      <ul>\r\n        {prayers.map((prayer, index) => (\r\n          <li key={index} className={prayer.completed ? 'completed' : ''}>\r\n            <span onClick={() => handleTogglePrayer(index)}>{prayer.time}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}