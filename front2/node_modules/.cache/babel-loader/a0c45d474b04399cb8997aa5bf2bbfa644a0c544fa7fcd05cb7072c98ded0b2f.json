{"ast":null,"code":"import React,{useEffect,useState,useMemo}from'react';import{useTonConnectUI}from'@tonconnect/ui-react';import{Link}from'react-router-dom';import'./WalletConnector.css';import{TonProofDemoApi}from'./TonProofDemoApiService';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const WalletConnector=_ref=>{var _languages$selectedLa2;let{onConnectWallet,selectedLanguage}=_ref;const[wallet,setWallet]=useState(null);const[address,setAddress]=useState('');const[balance,setBalance]=useState('');const[currentLanguageIndex,setCurrentLanguageIndex]=useState(0);const languages=useMemo(()=>({en:['Connect Wallet'],tr:['Cüzdanı Bağla'],es:['Conectar Cartera'],fr:['Connecter le Portefeuille'],zh:['接钱包'],ar:['اتصل بالمحفظة'],de:['Verbinden Sie die Geldbörse'],ru:['Подключить кошелек']}),[]);const[tonConnectUI]=useTonConnectUI();useEffect(()=>{const storedWallet=localStorage.getItem('wallet');if(storedWallet){const walletData=JSON.parse(storedWallet);setWallet(walletData);setAddress(walletData.account.address);setBalance(walletData.balance);}const languageInterval=setInterval(()=>{setCurrentLanguageIndex(prev=>{var _languages$selectedLa;return(prev+1)%(((_languages$selectedLa=languages[selectedLanguage])===null||_languages$selectedLa===void 0?void 0:_languages$selectedLa.length)||languages['en'].length);});},3000);return()=>clearInterval(languageInterval);},[languages,selectedLanguage]);const isMobile=()=>{return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);};const connectWallet=async()=>{try{if(wallet){console.log('Wallet is already connected.');return;}console.log('Attempting to connect to the wallet...');const connectResult=await tonConnectUI.connectWallet({universalLink:isMobile()?undefined:'https://tonkeeper.app'});console.log('Wallet connection result:',connectResult);if(connectResult.wallet){const walletState=connectResult.wallet;const walletAddress=walletState.account.address;console.log('Connected wallet address:',walletAddress);const balance=await fetchBalance(walletAddress);console.log('Fetched balance:',balance);const walletData={account:{address:walletAddress},balance};setWallet(walletData);setAddress(walletAddress);setBalance(balance);localStorage.setItem('wallet',JSON.stringify(walletData));onConnectWallet(walletData);if(connectResult.tonProof){console.log('Checking Ton Proof...');await TonProofDemoApi.checkProof(connectResult.tonProof.proof,connectResult.account);}}}catch(error){console.error('Ton Wallet connection failed:',error);}};const disconnectWallet=()=>{console.log('Disconnecting wallet...');tonConnectUI.disconnect();setWallet(null);setAddress('');setBalance('');localStorage.removeItem('wallet');TonProofDemoApi.reset();};const fetchBalance=async address=>{try{console.log('Fetching balance for address:',address);const response=await fetch(\"https://tonapi.io/v1/account/getInfo?account=\".concat(address));const data=await response.json();console.log('Balance fetched:',data.balance);return data.balance;}catch(error){console.error('Failed to fetch balance:',error);return'N/A';}};return/*#__PURE__*/_jsx(\"div\",{className:\"wallet-connector-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"wallet-connector\",children:wallet?/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-info slide-in\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected wallet address: \",address]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your balance: \",balance]}),/*#__PURE__*/_jsx(\"button\",{className:\"wallet-button\",onClick:disconnectWallet,children:\"Disconnect Wallet\"}),/*#__PURE__*/_jsx(Link,{to:\"/main\",className:\"auto-redirect-link\"})]}):/*#__PURE__*/_jsx(\"button\",{className:\"wallet-button slide-in-bottom\",onClick:connectWallet,children:((_languages$selectedLa2=languages[selectedLanguage])===null||_languages$selectedLa2===void 0?void 0:_languages$selectedLa2[currentLanguageIndex])||languages['en'][currentLanguageIndex]})})});};export default WalletConnector;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}