{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\son-vall-son\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTonConnectUI } from '@tonconnect/ui-react';\nimport './WalletConnector.css';\nimport { TonProofDemoApi } from './TonProofDemoApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState(0);\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\n  const [tonConnectUI] = useTonConnectUI();\n  useEffect(() => {\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n    const languageInterval = setInterval(() => {\n      setCurrentLanguage(prev => (prev + 1) % languages.length);\n    }, 3000);\n    return () => clearInterval(languageInterval);\n  }, [languages.length]);\n  const isMobile = () => {\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  };\n  const connectWallet = async () => {\n    try {\n      if (tonConnectUI.connected) {\n        return;\n      }\n      const connectResult = await tonConnectUI.connectWallet({\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app'\n      });\n      const walletState = connectResult.wallet;\n      const walletAddress = walletState.account.address;\n      const balance = await fetchBalance(walletAddress);\n      const walletData = {\n        account: {\n          address: walletAddress\n        },\n        balance\n      };\n      setWallet(walletData);\n      setAddress(walletAddress);\n      setBalance(balance);\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      onConnectWallet(walletData);\n      if (connectResult.tonProof) {\n        await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\n      }\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    tonConnectUI.disconnect();\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n    localStorage.removeItem('wallet');\n    TonProofDemoApi.reset();\n  };\n  const fetchBalance = async address => {\n    try {\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\n      const data = await response.json();\n      return data.balance;\n    } catch (error) {\n      console.error('Failed to fetch balance:', error);\n      return 'N/A';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connector-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-connector\",\n      children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info slide-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected wallet address: \", address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your balance: \", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-button\",\n          onClick: disconnectWallet,\n          children: \"Disconnect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wallet-button slide-in-bottom\",\n        onClick: connectWallet,\n        children: languages[currentLanguage]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"//MOyqquqy463p+ObNNIz5M1R44=\", false, function () {\n  return [useTonConnectUI];\n});\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","useTonConnectUI","TonProofDemoApi","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","wallet","setWallet","address","setAddress","balance","setBalance","currentLanguage","setCurrentLanguage","languages","tonConnectUI","storedWallet","localStorage","getItem","walletData","JSON","parse","account","languageInterval","setInterval","prev","length","clearInterval","isMobile","test","navigator","userAgent","connectWallet","connected","connectResult","universalLink","undefined","walletState","walletAddress","fetchBalance","setItem","stringify","tonProof","checkProof","proof","error","console","disconnectWallet","disconnect","removeItem","reset","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/son-vall-son/front2/src/components/WalletConnector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTonConnectUI } from '@tonconnect/ui-react';\r\nimport './WalletConnector.css';\r\nimport { TonProofDemoApi } from './TonProofDemoApiService';\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(0);\r\n\r\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\r\n\r\n  const [tonConnectUI] = useTonConnectUI();\r\n\r\n  useEffect(() => {\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n\r\n    const languageInterval = setInterval(() => {\r\n      setCurrentLanguage((prev) => (prev + 1) % languages.length);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(languageInterval);\r\n  }, [languages.length]);\r\n\r\n  const isMobile = () => {\r\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (tonConnectUI.connected) {\r\n        return;\r\n      }\r\n\r\n      const connectResult = await tonConnectUI.connectWallet({\r\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app',\r\n      });\r\n\r\n      const walletState = connectResult.wallet;\r\n      const walletAddress = walletState.account.address;\r\n      const balance = await fetchBalance(walletAddress);\r\n\r\n      const walletData = {\r\n        account: { address: walletAddress },\r\n        balance,\r\n      };\r\n\r\n      setWallet(walletData);\r\n      setAddress(walletAddress);\r\n      setBalance(balance);\r\n\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet(walletData);\r\n\r\n      if (connectResult.tonProof) {\r\n        await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    tonConnectUI.disconnect();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n    TonProofDemoApi.reset();\r\n  };\r\n\r\n  const fetchBalance = async (address) => {\r\n    try {\r\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\r\n      const data = await response.json();\r\n      return data.balance;\r\n    } catch (error) {\r\n      console.error('Failed to fetch balance:', error);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallet-connector-container\">\r\n      <div className=\"wallet-connector\">\r\n        {wallet ? (\r\n          <div className=\"wallet-info slide-in\">\r\n            <p>Connected wallet address: {address}</p>\r\n            <p>Your balance: {balance}</p>\r\n            <button className=\"wallet-button\" onClick={disconnectWallet}>Disconnect Wallet</button>\r\n          </div>\r\n        ) : (\r\n          <button className=\"wallet-button slide-in-bottom\" onClick={connectWallet}>\r\n            {languages[currentLanguage]}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}