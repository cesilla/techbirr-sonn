{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\TechBirr\\\\front2\\\\src\\\\components\\\\Kayit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Kayit.css'; // CSS dosyasını içe aktarıyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kayit = ({\n  chatId\n}) => {\n  _s();\n  const [currentLanguage, setCurrentLanguage] = useState('Choose your language');\n  const languages = ['Choose your language', 'Выберите ваш язык', 'Dil Seçiniz', 'Choisissez votre langue', 'اختر لغتك'];\n  let languageIndex = 0;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentLanguage(languages[languageIndex]);\n      languageIndex = (languageIndex + 1) % languages.length;\n    }, 300);\n    return () => clearInterval(interval);\n  }, []);\n  const handleLanguageSelect = async language => {\n    try {\n      await axios.post('/select-language', {\n        chatId,\n        language\n      });\n      navigate('/connect-wallet', {\n        state: {\n          language,\n          chatId\n        }\n      });\n    } catch (error) {\n      console.error('Dil seçimi başarısız:', error);\n    }\n  };\n  const isMobile = window.innerWidth <= 768;\n  const backgroundImage = isMobile ? '/kayit/Kayıt.png' : '/kayit/Arkaplan.png';\n  const containerStyle = {\n    width: '100%',\n    height: '100vh',\n    position: 'relative',\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    fontFamily: 'Arial, sans-serif'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect('Türkçe'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: \"T\\xFCrk\\xE7e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect('English'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect('فارسي'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: \"\\u0641\\u0627\\u0631\\u0633\\u064A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect('Français'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: \"Fran\\xE7ais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-button\",\n        onClick: () => handleLanguageSelect('русский'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-text\",\n          children: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-language\",\n      children: currentLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Kayit, \"UbAqtJNVusbU968X6jLqGFuN+ag=\", false, function () {\n  return [useNavigate];\n});\n_c = Kayit;\nexport default Kayit;\nvar _c;\n$RefreshReg$(_c, \"Kayit\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Kayit","chatId","_s","currentLanguage","setCurrentLanguage","languages","languageIndex","navigate","interval","setInterval","length","clearInterval","handleLanguageSelect","language","post","state","error","console","isMobile","window","innerWidth","backgroundImage","containerStyle","width","height","position","backgroundSize","backgroundPosition","backgroundRepeat","display","justifyContent","alignItems","flexDirection","fontFamily","style","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/Kayit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Kayit.css'; // CSS dosyasını içe aktarıyoruz\r\n\r\nconst Kayit = ({ chatId }) => {\r\n  const [currentLanguage, setCurrentLanguage] = useState('Choose your language');\r\n  const languages = [\r\n    'Choose your language',\r\n    'Выберите ваш язык',\r\n    'Dil Seçiniz',\r\n    'Choisissez votre langue',\r\n    'اختر لغتك'\r\n  ];\r\n  let languageIndex = 0;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentLanguage(languages[languageIndex]);\r\n      languageIndex = (languageIndex + 1) % languages.length;\r\n    }, 300);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleLanguageSelect = async (language) => {\r\n    try {\r\n      await axios.post('/select-language', { chatId, language });\r\n      navigate('/connect-wallet', { state: { language, chatId } });\r\n    } catch (error) {\r\n      console.error('Dil seçimi başarısız:', error);\r\n    }\r\n  };\r\n\r\n  const isMobile = window.innerWidth <= 768;\r\n  const backgroundImage = isMobile ? '/kayit/Kayıt.png' : '/kayit/Arkaplan.png';\r\n\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    position: 'relative',\r\n    backgroundImage: `url(${backgroundImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Arial, sans-serif',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div className=\"language-container\">\r\n        <button className=\"language-button\" onClick={() => handleLanguageSelect('Türkçe')}>\r\n          <span className=\"language-text\">Türkçe</span>\r\n        </button>\r\n        <button className=\"language-button\" onClick={() => handleLanguageSelect('English')}>\r\n          <span className=\"language-text\">English</span>\r\n        </button>\r\n        <button className=\"language-button\" onClick={() => handleLanguageSelect('فارسي')}>\r\n          <span className=\"language-text\">فارسي</span>\r\n        </button>\r\n        <button className=\"language-button\" onClick={() => handleLanguageSelect('Français')}>\r\n          <span className=\"language-text\">Français</span>\r\n        </button>\r\n        <button className=\"language-button\" onClick={() => handleLanguageSelect('русский')}>\r\n          <span className=\"language-text\">русский</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"current-language\">{currentLanguage}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kayit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}