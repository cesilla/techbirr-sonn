{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechBirr\\\\front2\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [prayerTimes, setPrayerTimes] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchPrayerTimes = async (city, country) => {\n    const promises = [];\n    for (let i = 0; i < 30; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() + i);\n      const formattedDate = date.toISOString().split('T')[0];\n      promises.push(axios.get(`http://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=2&date=${formattedDate}`));\n    }\n    try {\n      const responses = await Promise.all(promises);\n      const times = responses.map(response => response.data.data.timings);\n      setPrayerTimes(times);\n      setLoading(false);\n    } catch (error) {\n      setError('Error fetching prayer times');\n      setLoading(false);\n      console.error('Prayer Times Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPrayerTimes('Istanbul', 'Turkey'); // Replace with the desired city and country\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-page\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: prayerTimes.length > 0 ? prayerTimes.map((times, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Day \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fajr: \", times.Fajr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dhuhr: \", times.Dhuhr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Asr: \", times.Asr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Maghrib: \", times.Maghrib]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Isha: \", times.Isha]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No prayer times available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"L8xSGgo/y0eAcM89iMP2uZVrdZs=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Calendar","_s","prayerTimes","setPrayerTimes","error","setError","loading","setLoading","fetchPrayerTimes","city","country","promises","i","date","Date","setDate","getDate","formattedDate","toISOString","split","push","get","responses","Promise","all","times","map","response","data","timings","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","index","Fajr","Dhuhr","Asr","Maghrib","Isha","_c","$RefreshReg$"],"sources":["D:/TechBirr/front2/src/components/Calendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Calendar.css';\r\n\r\nconst Calendar = () => {\r\n  const [prayerTimes, setPrayerTimes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchPrayerTimes = async (city, country) => {\r\n    const promises = [];\r\n    for (let i = 0; i < 30; i++) {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() + i);\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n\r\n      promises.push(\r\n        axios.get(`http://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=2&date=${formattedDate}`)\r\n      );\r\n    }\r\n\r\n    try {\r\n      const responses = await Promise.all(promises);\r\n      const times = responses.map(response => response.data.data.timings);\r\n      setPrayerTimes(times);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError('Error fetching prayer times');\r\n      setLoading(false);\r\n      console.error('Prayer Times Error:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPrayerTimes('Istanbul', 'Turkey'); // Replace with the desired city and country\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-page\">\r\n      {error && <p>{error}</p>}\r\n      <div className=\"calendar\">\r\n        {prayerTimes.length > 0 ? (\r\n          prayerTimes.map((times, index) => (\r\n            <div key={index} className=\"calendar-day\">\r\n              <h3>Day {index + 1}</h3>\r\n              <p>Fajr: {times.Fajr}</p>\r\n              <p>Dhuhr: {times.Dhuhr}</p>\r\n              <p>Asr: {times.Asr}</p>\r\n              <p>Maghrib: {times.Maghrib}</p>\r\n              <p>Isha: {times.Isha}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No prayer times available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}