{"ast":null,"code":"// src/components/WalletConnector.js\nimport React,{useEffect,useState}from'react';import TonConnect from'@tonconnect/sdk';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const WalletConnector=_ref=>{let{onConnectWallet}=_ref;const[wallet,setWallet]=useState(null);const[address,setAddress]=useState('');const[balance,setBalance]=useState('');const tonConnect=new TonConnect();useEffect(()=>{// Check if a wallet is already connected\nconst storedWallet=localStorage.getItem('wallet');if(storedWallet){const walletData=JSON.parse(storedWallet);setWallet(walletData);setAddress(walletData.account.address);setBalance(walletData.balance);}},[]);const isMobile=()=>{return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);};const connectWallet=async()=>{try{const wallets=await tonConnect.getWallets();if(wallets.length===0){throw new Error('No wallets found');}const selectedWallet=wallets[0];// Choose the first wallet from the list\nif(isMobile()){// Handle mobile wallet connection\nwindow.location.href=selectedWallet.universalLink;}else{// Handle desktop wallet connection\nawait tonConnect.connectWallet({jsBridgeKey:selectedWallet.jsBridgeKey});}// Get wallet state\nconst walletState=tonConnect.wallet;const walletAddress=walletState.account.address;const balance=await fetchBalance(walletAddress);const walletData={account:{address:walletAddress},balance};setWallet(walletData);setAddress(walletAddress);setBalance(balance);localStorage.setItem('wallet',JSON.stringify(walletData));onConnectWallet();}catch(error){console.error('Ton Wallet connection failed:',error);}};const disconnectWallet=()=>{tonConnect.disconnectWallet();setWallet(null);setAddress('');setBalance('');localStorage.removeItem('wallet');};const fetchBalance=async address=>{// Replace with actual API call to get the balance\nconst response=await fetch(\"https://tonapi.io/v1/account/getInfo?account=\".concat(address));const data=await response.json();return data.balance;};return/*#__PURE__*/_jsx(\"div\",{children:wallet?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected wallet address: \",address]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your balance: \",balance]}),/*#__PURE__*/_jsx(\"button\",{onClick:disconnectWallet,children:\"Disconnect Wallet\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,children:\"Connect with Ton Wallet\"})});};export default WalletConnector;","map":{"version":3,"names":["React","useEffect","useState","TonConnect","jsxs","_jsxs","jsx","_jsx","WalletConnector","_ref","onConnectWallet","wallet","setWallet","address","setAddress","balance","setBalance","tonConnect","storedWallet","localStorage","getItem","walletData","JSON","parse","account","isMobile","test","navigator","userAgent","connectWallet","wallets","getWallets","length","Error","selectedWallet","window","location","href","universalLink","jsBridgeKey","walletState","walletAddress","fetchBalance","setItem","stringify","error","console","disconnectWallet","removeItem","response","fetch","concat","data","json","children","onClick"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/WalletConnector.js"],"sourcesContent":["// src/components/WalletConnector.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport TonConnect from '@tonconnect/sdk';\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n\r\n  const tonConnect = new TonConnect();\r\n\r\n  useEffect(() => {\r\n    // Check if a wallet is already connected\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n  }, []);\r\n\r\n  const isMobile = () => {\r\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const wallets = await tonConnect.getWallets();\r\n      if (wallets.length === 0) {\r\n        throw new Error('No wallets found');\r\n      }\r\n\r\n      const selectedWallet = wallets[0]; // Choose the first wallet from the list\r\n\r\n      if (isMobile()) {\r\n        // Handle mobile wallet connection\r\n        window.location.href = selectedWallet.universalLink;\r\n      } else {\r\n        // Handle desktop wallet connection\r\n        await tonConnect.connectWallet({\r\n          jsBridgeKey: selectedWallet.jsBridgeKey,\r\n        });\r\n      }\r\n\r\n      // Get wallet state\r\n      const walletState = tonConnect.wallet;\r\n      const walletAddress = walletState.account.address;\r\n      const balance = await fetchBalance(walletAddress);\r\n\r\n      const walletData = {\r\n        account: { address: walletAddress },\r\n        balance,\r\n      };\r\n\r\n      setWallet(walletData);\r\n      setAddress(walletAddress);\r\n      setBalance(balance);\r\n\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet();\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    tonConnect.disconnectWallet();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n  };\r\n\r\n  const fetchBalance = async (address) => {\r\n    // Replace with actual API call to get the balance\r\n    const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\r\n    const data = await response.json();\r\n    return data.balance;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {wallet ? (\r\n        <div>\r\n          <p>Connected wallet address: {address}</p>\r\n          <p>Your balance: {balance}</p>\r\n          <button onClick={disconnectWallet}>Disconnect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet}>Connect with Ton Wallet</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}