{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\bot\\\\techbirr-son\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TonConnect from '@tonconnect/sdk';\nimport './WalletConnector.css'; // CSS dosyasını ekleyin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState(0);\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\n  const tonConnect = new TonConnect();\n  useEffect(() => {\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n    const languageInterval = setInterval(() => {\n      setCurrentLanguage(prev => (prev + 1) % languages.length);\n    }, 3000);\n    return () => clearInterval(languageInterval);\n  }, []);\n  const isMobile = () => {\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  };\n  const connectWallet = async () => {\n    try {\n      const wallets = await tonConnect.getWallets();\n      if (wallets.length === 0) {\n        throw new Error('No wallets found');\n      }\n      const selectedWallet = wallets[0];\n      if (isMobile()) {\n        window.location.href = selectedWallet.universalLink;\n      } else {\n        await tonConnect.connectWallet({\n          jsBridgeKey: selectedWallet.jsBridgeKey\n        });\n      }\n      const walletState = tonConnect.wallet;\n      const walletAddress = walletState.account.address;\n      const balance = await fetchBalance(walletAddress);\n      const walletData = {\n        account: {\n          address: walletAddress\n        },\n        balance\n      };\n      setWallet(walletData);\n      setAddress(walletAddress);\n      setBalance(balance);\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      onConnectWallet(walletData);\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    tonConnect.disconnectWallet();\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n    localStorage.removeItem('wallet');\n  };\n  const fetchBalance = async address => {\n    try {\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\n      const data = await response.json();\n      return data.balance;\n    } catch (error) {\n      console.error('Failed to fetch balance:', error);\n      return 'N/A';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connector\",\n    children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info slide-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected wallet address: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wallet-button\",\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wallet-button slide-in-bottom\",\n      onClick: connectWallet,\n      children: languages[currentLanguage]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"oSgh5ycji11E21Y71nUcZ4HAVOI=\");\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","TonConnect","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","wallet","setWallet","address","setAddress","balance","setBalance","currentLanguage","setCurrentLanguage","languages","tonConnect","storedWallet","localStorage","getItem","walletData","JSON","parse","account","languageInterval","setInterval","prev","length","clearInterval","isMobile","test","navigator","userAgent","connectWallet","wallets","getWallets","Error","selectedWallet","window","location","href","universalLink","jsBridgeKey","walletState","walletAddress","fetchBalance","setItem","stringify","error","console","disconnectWallet","removeItem","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/bot/techbirr-son/front2/src/components/WalletConnector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TonConnect from '@tonconnect/sdk';\r\nimport './WalletConnector.css'; // CSS dosyasını ekleyin\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(0);\r\n\r\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\r\n\r\n  const tonConnect = new TonConnect();\r\n\r\n  useEffect(() => {\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n\r\n    const languageInterval = setInterval(() => {\r\n      setCurrentLanguage((prev) => (prev + 1) % languages.length);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(languageInterval);\r\n  }, []);\r\n\r\n  const isMobile = () => {\r\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const wallets = await tonConnect.getWallets();\r\n      if (wallets.length === 0) {\r\n        throw new Error('No wallets found');\r\n      }\r\n\r\n      const selectedWallet = wallets[0];\r\n\r\n      if (isMobile()) {\r\n        window.location.href = selectedWallet.universalLink;\r\n      } else {\r\n        await tonConnect.connectWallet({\r\n          jsBridgeKey: selectedWallet.jsBridgeKey,\r\n        });\r\n      }\r\n\r\n      const walletState = tonConnect.wallet;\r\n      const walletAddress = walletState.account.address;\r\n      const balance = await fetchBalance(walletAddress);\r\n\r\n      const walletData = {\r\n        account: { address: walletAddress },\r\n        balance,\r\n      };\r\n\r\n      setWallet(walletData);\r\n      setAddress(walletAddress);\r\n      setBalance(balance);\r\n\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet(walletData);\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    tonConnect.disconnectWallet();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n  };\r\n\r\n  const fetchBalance = async (address) => {\r\n    try {\r\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\r\n      const data = await response.json();\r\n      return data.balance;\r\n    } catch (error) {\r\n      console.error('Failed to fetch balance:', error);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallet-connector\">\r\n      {wallet ? (\r\n        <div className=\"wallet-info slide-in\">\r\n          <p>Connected wallet address: {address}</p>\r\n          <p>Your balance: {balance}</p>\r\n          <button className=\"wallet-button\" onClick={disconnectWallet}>Disconnect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <button className=\"wallet-button slide-in-bottom\" onClick={connectWallet}>\r\n          {languages[currentLanguage]}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}