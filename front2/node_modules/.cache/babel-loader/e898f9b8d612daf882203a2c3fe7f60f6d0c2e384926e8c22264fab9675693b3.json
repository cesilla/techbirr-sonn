{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\bot\\\\techbirr-son\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTonConnectUI, UserActionEvent, SdkActionEvent } from '@tonconnect/ui-react';\nimport './WalletConnector.css';\nimport { TonProofDemoApi } from './TonProofDemoApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState(0);\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\n  const [tonConnectUI] = useTonConnectUI();\n  useEffect(() => {\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n    const languageInterval = setInterval(() => {\n      setCurrentLanguage(prev => (prev + 1) % languages.length);\n    }, 3000);\n    return () => clearInterval(languageInterval);\n  }, []);\n  useEffect(() => {\n    const logEvent = scope => event => {\n      scope = scope.startsWith('ton-connect-ui-') ? 'TonConnectUI' : 'TonConnect';\n      return event => {\n        if (!(event instanceof CustomEvent)) {\n          return;\n        }\n        const detail = event.detail;\n        console.log(`${scope} Event: ${detail.type}`, detail);\n      };\n    };\n    const tonConnectUiPrefix = 'ton-connect-ui-';\n    const tonConnectUiEvents = ['request-version', 'response-version', 'connection-started', 'connection-completed', 'connection-error', 'connection-restoring-started', 'connection-restoring-completed', 'connection-restoring-error', 'transaction-sent-for-signature', 'transaction-signed', 'transaction-signing-failed', 'disconnection'].map(event => `${tonConnectUiPrefix}${event}`);\n    const tonConnectPrefix = 'ton-connect-';\n    const tonConnectEvents = ['request-version', 'response-version', 'connection-started', 'connection-completed', 'connection-error', 'connection-restoring-started', 'connection-restoring-completed', 'connection-restoring-error', 'transaction-sent-for-signature', 'transaction-signed', 'transaction-signing-failed', 'disconnection'].map(event => `${tonConnectPrefix}${event}`);\n    const events = [...tonConnectUiEvents, ...tonConnectEvents];\n    for (const event of events) {\n      try {\n        window.addEventListener(event, logEvent(event));\n      } catch (e) {\n        console.error('Failed to add event listener:', e);\n      }\n    }\n    return () => {\n      for (const event of events) {\n        try {\n          window.removeEventListener(event, logEvent(event));\n        } catch (e) {\n          console.error('Failed to remove event listener:', e);\n        }\n      }\n    };\n  }, []);\n  const isMobile = () => {\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  };\n  const connectWallet = async () => {\n    try {\n      if (tonConnectUI.connected) {\n        return;\n      }\n      const connectResult = await tonConnectUI.connectWallet({\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app'\n      });\n      const walletState = connectResult.wallet;\n      const walletAddress = walletState.account.address;\n      const balance = await fetchBalance(walletAddress);\n      const walletData = {\n        account: {\n          address: walletAddress\n        },\n        balance\n      };\n      setWallet(walletData);\n      setAddress(walletAddress);\n      setBalance(balance);\n      localStorage.setItem('wallet', JSON.stringify(walletData));\n      onConnectWallet(walletData);\n      if (connectResult.tonProof) {\n        await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\n      }\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    tonConnectUI.disconnect();\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n    localStorage.removeItem('wallet');\n    TonProofDemoApi.reset();\n  };\n  const fetchBalance = async address => {\n    try {\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\n      const data = await response.json();\n      return data.balance;\n    } catch (error) {\n      console.error('Failed to fetch balance:', error);\n      return 'N/A';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connector\",\n    children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info slide-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected wallet address: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wallet-button\",\n        onClick: disconnectWallet,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wallet-button slide-in-bottom\",\n      onClick: connectWallet,\n      children: languages[currentLanguage]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"5xsKJDqlHHZYgGzVwyIYW+HRsMs=\", false, function () {\n  return [useTonConnectUI];\n});\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","useTonConnectUI","UserActionEvent","SdkActionEvent","TonProofDemoApi","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","_s","wallet","setWallet","address","setAddress","balance","setBalance","currentLanguage","setCurrentLanguage","languages","tonConnectUI","storedWallet","localStorage","getItem","walletData","JSON","parse","account","languageInterval","setInterval","prev","length","clearInterval","logEvent","scope","event","startsWith","CustomEvent","detail","console","log","type","tonConnectUiPrefix","tonConnectUiEvents","map","tonConnectPrefix","tonConnectEvents","events","window","addEventListener","e","error","removeEventListener","isMobile","test","navigator","userAgent","connectWallet","connected","connectResult","universalLink","undefined","walletState","walletAddress","fetchBalance","setItem","stringify","tonProof","checkProof","proof","disconnectWallet","disconnect","removeItem","reset","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/bot/techbirr-son/front2/src/components/WalletConnector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTonConnectUI, UserActionEvent, SdkActionEvent } from '@tonconnect/ui-react';\r\nimport './WalletConnector.css';\r\nimport { TonProofDemoApi } from './TonProofDemoApiService';\r\n\r\nconst WalletConnector = ({ onConnectWallet }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(0);\r\n\r\n  const languages = ['Connect Wallet', 'Cüzdanı Bağla', 'Conectar Cartera', 'Connecter le Portefeuille', '接钱包', 'اتصل بالمحفظة'];\r\n\r\n  const [tonConnectUI] = useTonConnectUI();\r\n\r\n  useEffect(() => {\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n\r\n    const languageInterval = setInterval(() => {\r\n      setCurrentLanguage((prev) => (prev + 1) % languages.length);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(languageInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const logEvent = (scope) => (event) => {\r\n      scope = scope.startsWith('ton-connect-ui-') ? 'TonConnectUI' : 'TonConnect';\r\n  \r\n      return (event) => {\r\n        if (!(event instanceof CustomEvent)) {\r\n          return;\r\n        }\r\n        const detail = event.detail;\r\n        console.log(`${scope} Event: ${detail.type}`, detail);\r\n      };\r\n    };\r\n  \r\n    const tonConnectUiPrefix = 'ton-connect-ui-';\r\n    const tonConnectUiEvents = [\r\n      'request-version',\r\n      'response-version',\r\n      'connection-started',\r\n      'connection-completed',\r\n      'connection-error',\r\n      'connection-restoring-started',\r\n      'connection-restoring-completed',\r\n      'connection-restoring-error',\r\n      'transaction-sent-for-signature',\r\n      'transaction-signed',\r\n      'transaction-signing-failed',\r\n      'disconnection',\r\n    ].map(event => `${tonConnectUiPrefix}${event}`);\r\n  \r\n    const tonConnectPrefix = 'ton-connect-';\r\n    const tonConnectEvents = [\r\n      'request-version',\r\n      'response-version',\r\n      'connection-started',\r\n      'connection-completed',\r\n      'connection-error',\r\n      'connection-restoring-started',\r\n      'connection-restoring-completed',\r\n      'connection-restoring-error',\r\n      'transaction-sent-for-signature',\r\n      'transaction-signed',\r\n      'transaction-signing-failed',\r\n      'disconnection',\r\n    ].map(event => `${tonConnectPrefix}${event}`);\r\n  \r\n    const events = [\r\n      ...tonConnectUiEvents,\r\n      ...tonConnectEvents,\r\n    ];\r\n  \r\n    for (const event of events) {\r\n      try {\r\n        window.addEventListener(event, logEvent(event));\r\n      } catch (e) {\r\n        console.error('Failed to add event listener:', e);\r\n      }\r\n    }\r\n  \r\n    return () => {\r\n      for (const event of events) {\r\n        try {\r\n          window.removeEventListener(event, logEvent(event));\r\n        } catch (e) {\r\n          console.error('Failed to remove event listener:', e);\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const isMobile = () => {\r\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (tonConnectUI.connected) {\r\n        return;\r\n      }\r\n\r\n      const connectResult = await tonConnectUI.connectWallet({\r\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app',\r\n      });\r\n\r\n      const walletState = connectResult.wallet;\r\n      const walletAddress = walletState.account.address;\r\n      const balance = await fetchBalance(walletAddress);\r\n\r\n      const walletData = {\r\n        account: { address: walletAddress },\r\n        balance,\r\n      };\r\n\r\n      setWallet(walletData);\r\n      setAddress(walletAddress);\r\n      setBalance(balance);\r\n\r\n      localStorage.setItem('wallet', JSON.stringify(walletData));\r\n      onConnectWallet(walletData);\r\n\r\n      if (connectResult.tonProof) {\r\n        await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    tonConnectUI.disconnect();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n    TonProofDemoApi.reset();\r\n  };\r\n\r\n  const fetchBalance = async (address) => {\r\n    try {\r\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\r\n      const data = await response.json();\r\n      return data.balance;\r\n    } catch (error) {\r\n      console.error('Failed to fetch balance:', error);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallet-connector\">\r\n      {wallet ? (\r\n        <div className=\"wallet-info slide-in\">\r\n          <p>Connected wallet address: {address}</p>\r\n          <p>Your balance: {balance}</p>\r\n          <button className=\"wallet-button\" onClick={disconnectWallet}>Disconnect Wallet</button>\r\n        </div>\r\n      ) : (\r\n        <button className=\"wallet-button slide-in-bottom\" onClick={connectWallet}>\r\n          {languages[currentLanguage]}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}