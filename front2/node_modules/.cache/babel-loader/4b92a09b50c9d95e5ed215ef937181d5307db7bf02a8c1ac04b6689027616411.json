{"ast":null,"code":"import React,{useState}from'react';import'./ToDoList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const initialPrayers=[{name:'Fajr',time:'Sabah Namazı',completed:false},{name:'Dhuhr',time:'Öğle Namazı',completed:false},{name:'Asr',time:'İkindi Namazı',completed:false},{name:'Maghrib',time:'Akşam Namazı',completed:false},{name:'Isha',time:'Yatsı Namazı',completed:false}];const ToDoList=()=>{const[tasks,setTasks]=useState([]);const[prayers,setPrayers]=useState(initialPrayers);const[newTask,setNewTask]=useState('');const handleAddTask=()=>{if(newTask.trim()){setTasks([...tasks,{text:newTask,completed:false}]);setNewTask('');}};const handleToggleTask=index=>{const updatedTasks=tasks.map((task,taskIndex)=>{if(taskIndex===index){return{...task,completed:!task.completed};}return task;});setTasks(updatedTasks);};const handleDeleteTask=index=>{const updatedTasks=tasks.filter((_,taskIndex)=>taskIndex!==index);setTasks(updatedTasks);};const handleTogglePrayer=index=>{const updatedPrayers=prayers.map((prayer,prayerIndex)=>{if(prayerIndex===index){return{...prayer,completed:!prayer.completed};}return prayer;});setPrayers(updatedPrayers);};return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"To-Do List\"}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map((task,index)=>/*#__PURE__*/_jsxs(\"li\",{className:task.completed?'completed':'',children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>handleToggleTask(index),children:task.text}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteTask(index),children:\"Sil\"})]},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTask,onChange:e=>setNewTask(e.target.value),placeholder:\"Yeni g\\xF6rev ekle\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTask,children:\"Ekle\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"G\\xFCnl\\xFCk Namazlar\"}),/*#__PURE__*/_jsx(\"ul\",{children:prayers.map((prayer,index)=>/*#__PURE__*/_jsx(\"li\",{className:prayer.completed?'completed':'',children:/*#__PURE__*/_jsx(\"span\",{onClick:()=>handleTogglePrayer(index),children:prayer.time})},index))})]});};export default ToDoList;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","initialPrayers","name","time","completed","ToDoList","tasks","setTasks","prayers","setPrayers","newTask","setNewTask","handleAddTask","trim","text","handleToggleTask","index","updatedTasks","map","task","taskIndex","handleDeleteTask","filter","_","handleTogglePrayer","updatedPrayers","prayer","prayerIndex","className","children","onClick","type","value","onChange","e","target","placeholder"],"sources":["C:/Users/ESC/Desktop/TechBirr/front2/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ToDoList.css';\r\n\r\nconst initialPrayers = [\r\n  { name: 'Fajr', time: 'Sabah Namazı', completed: false },\r\n  { name: 'Dhuhr', time: 'Öğle Namazı', completed: false },\r\n  { name: 'Asr', time: 'İkindi Namazı', completed: false },\r\n  { name: 'Maghrib', time: 'Akşam Namazı', completed: false },\r\n  { name: 'Isha', time: 'Yatsı Namazı', completed: false }\r\n];\r\n\r\nconst ToDoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [prayers, setPrayers] = useState(initialPrayers);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, { text: newTask, completed: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const handleToggleTask = (index) => {\r\n    const updatedTasks = tasks.map((task, taskIndex) => {\r\n      if (taskIndex === index) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleTogglePrayer = (index) => {\r\n    const updatedPrayers = prayers.map((prayer, prayerIndex) => {\r\n      if (prayerIndex === index) {\r\n        return { ...prayer, completed: !prayer.completed };\r\n      }\r\n      return prayer;\r\n    });\r\n    setPrayers(updatedPrayers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h3>To-Do List</h3>\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={task.completed ? 'completed' : ''}>\r\n            <span onClick={() => handleToggleTask(index)}>{task.text}</span>\r\n            <button onClick={() => handleDeleteTask(index)}>Sil</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Yeni görev ekle\"\r\n      />\r\n      <button onClick={handleAddTask}>Ekle</button>\r\n\r\n      <h3>Günlük Namazlar</h3>\r\n      <ul>\r\n        {prayers.map((prayer, index) => (\r\n          <li key={index} className={prayer.completed ? 'completed' : ''}>\r\n            <span onClick={() => handleTogglePrayer(index)}>{prayer.time}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}