{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESC\\\\Desktop\\\\son-vall-son\\\\front2\\\\src\\\\components\\\\WalletConnector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useTonConnectUI } from '@tonconnect/ui-react';\nimport { Link } from 'react-router-dom';\nimport './WalletConnector.css';\nimport { TonProofDemoApi } from './TonProofDemoApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnector = ({\n  onConnectWallet,\n  selectedLanguage\n}) => {\n  _s();\n  var _languages$selectedLa2;\n  const [wallet, setWallet] = useState(null);\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [currentLanguageIndex, setCurrentLanguageIndex] = useState(0);\n  const languages = useMemo(() => ({\n    en: ['Connect Wallet'],\n    tr: ['Cüzdanı Bağla'],\n    es: ['Conectar Cartera'],\n    fr: ['Connecter le Portefeuille'],\n    zh: ['接钱包'],\n    ar: ['اتصل بالمحفظة'],\n    de: ['Verbinden Sie die Geldbörse'],\n    ru: ['Подключить кошелек']\n  }), []);\n  const [tonConnectUI] = useTonConnectUI();\n  useEffect(() => {\n    const storedWallet = localStorage.getItem('wallet');\n    if (storedWallet) {\n      const walletData = JSON.parse(storedWallet);\n      setWallet(walletData);\n      setAddress(walletData.account.address);\n      setBalance(walletData.balance);\n    }\n    const languageInterval = setInterval(() => {\n      setCurrentLanguageIndex(prev => {\n        var _languages$selectedLa;\n        return (prev + 1) % (((_languages$selectedLa = languages[selectedLanguage]) === null || _languages$selectedLa === void 0 ? void 0 : _languages$selectedLa.length) || languages['en'].length);\n      });\n    }, 3000);\n    return () => clearInterval(languageInterval);\n  }, [languages, selectedLanguage]);\n  const isMobile = () => {\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  };\n  const connectWallet = async () => {\n    try {\n      if (wallet) {\n        console.log('Wallet is already connected.');\n        return;\n      }\n      console.log('Attempting to connect to the wallet...');\n      const connectResult = await tonConnectUI.connectWallet({\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app'\n      });\n      console.log('Wallet connection result:', connectResult);\n      if (connectResult.wallet) {\n        const walletState = connectResult.wallet;\n        const walletAddress = walletState.account.address;\n        console.log('Connected wallet address:', walletAddress);\n        const balance = await fetchBalance(walletAddress);\n        console.log('Fetched balance:', balance);\n        const walletData = {\n          account: {\n            address: walletAddress\n          },\n          balance\n        };\n        setWallet(walletData);\n        setAddress(walletAddress);\n        setBalance(balance);\n        localStorage.setItem('wallet', JSON.stringify(walletData));\n        onConnectWallet(walletData);\n        if (connectResult.tonProof) {\n          console.log('Checking Ton Proof...');\n          await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\n        }\n      }\n    } catch (error) {\n      console.error('Ton Wallet connection failed:', error);\n    }\n  };\n  const disconnectWallet = () => {\n    console.log('Disconnecting wallet...');\n    tonConnectUI.disconnect();\n    setWallet(null);\n    setAddress('');\n    setBalance('');\n    localStorage.removeItem('wallet');\n    TonProofDemoApi.reset();\n  };\n  const fetchBalance = async address => {\n    try {\n      console.log('Fetching balance for address:', address);\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\n      const data = await response.json();\n      console.log('Balance fetched:', data.balance);\n      return data.balance;\n    } catch (error) {\n      console.error('Failed to fetch balance:', error);\n      return 'N/A';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connector-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-connector\",\n      children: wallet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info slide-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected wallet address: \", address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your balance: \", balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wallet-button\",\n          onClick: disconnectWallet,\n          children: \"Disconnect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          className: \"auto-redirect-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wallet-button slide-in-bottom\",\n        onClick: connectWallet,\n        children: ((_languages$selectedLa2 = languages[selectedLanguage]) === null || _languages$selectedLa2 === void 0 ? void 0 : _languages$selectedLa2[currentLanguageIndex]) || languages['en'][currentLanguageIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnector, \"c8CQTmaTOwk1C/P9PZHpvfkK+94=\", false, function () {\n  return [useTonConnectUI];\n});\n_c = WalletConnector;\nexport default WalletConnector;\nvar _c;\n$RefreshReg$(_c, \"WalletConnector\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useTonConnectUI","Link","TonProofDemoApi","jsxDEV","_jsxDEV","WalletConnector","onConnectWallet","selectedLanguage","_s","_languages$selectedLa2","wallet","setWallet","address","setAddress","balance","setBalance","currentLanguageIndex","setCurrentLanguageIndex","languages","en","tr","es","fr","zh","ar","de","ru","tonConnectUI","storedWallet","localStorage","getItem","walletData","JSON","parse","account","languageInterval","setInterval","prev","_languages$selectedLa","length","clearInterval","isMobile","test","navigator","userAgent","connectWallet","console","log","connectResult","universalLink","undefined","walletState","walletAddress","fetchBalance","setItem","stringify","tonProof","checkProof","proof","error","disconnectWallet","disconnect","removeItem","reset","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/ESC/Desktop/son-vall-son/front2/src/components/WalletConnector.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useTonConnectUI } from '@tonconnect/ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport './WalletConnector.css';\r\nimport { TonProofDemoApi } from './TonProofDemoApiService';\r\n\r\nconst WalletConnector = ({ onConnectWallet, selectedLanguage }) => {\r\n  const [wallet, setWallet] = useState(null);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState('');\r\n  const [currentLanguageIndex, setCurrentLanguageIndex] = useState(0);\r\n\r\n  const languages = useMemo(\r\n    () => ({\r\n      en: ['Connect Wallet'],\r\n      tr: ['Cüzdanı Bağla'],\r\n      es: ['Conectar Cartera'],\r\n      fr: ['Connecter le Portefeuille'],\r\n      zh: ['接钱包'],\r\n      ar: ['اتصل بالمحفظة'],\r\n      de: ['Verbinden Sie die Geldbörse'],\r\n      ru: ['Подключить кошелек'],\r\n    }),\r\n    []\r\n  );\r\n\r\n  const [tonConnectUI] = useTonConnectUI();\r\n\r\n  useEffect(() => {\r\n    const storedWallet = localStorage.getItem('wallet');\r\n    if (storedWallet) {\r\n      const walletData = JSON.parse(storedWallet);\r\n      setWallet(walletData);\r\n      setAddress(walletData.account.address);\r\n      setBalance(walletData.balance);\r\n    }\r\n\r\n    const languageInterval = setInterval(() => {\r\n      setCurrentLanguageIndex((prev) => (prev + 1) % (languages[selectedLanguage]?.length || languages['en'].length));\r\n    }, 3000);\r\n\r\n    return () => clearInterval(languageInterval);\r\n  }, [languages, selectedLanguage]);\r\n\r\n  const isMobile = () => {\r\n    return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (wallet) {\r\n        console.log('Wallet is already connected.');\r\n        return;\r\n      }\r\n\r\n      console.log('Attempting to connect to the wallet...');\r\n\r\n      const connectResult = await tonConnectUI.connectWallet({\r\n        universalLink: isMobile() ? undefined : 'https://tonkeeper.app',\r\n      });\r\n\r\n      console.log('Wallet connection result:', connectResult);\r\n\r\n      if (connectResult.wallet) {\r\n        const walletState = connectResult.wallet;\r\n        const walletAddress = walletState.account.address;\r\n        console.log('Connected wallet address:', walletAddress);\r\n\r\n        const balance = await fetchBalance(walletAddress);\r\n        console.log('Fetched balance:', balance);\r\n\r\n        const walletData = {\r\n          account: { address: walletAddress },\r\n          balance,\r\n        };\r\n\r\n        setWallet(walletData);\r\n        setAddress(walletAddress);\r\n        setBalance(balance);\r\n\r\n        localStorage.setItem('wallet', JSON.stringify(walletData));\r\n        onConnectWallet(walletData);\r\n\r\n        if (connectResult.tonProof) {\r\n          console.log('Checking Ton Proof...');\r\n          await TonProofDemoApi.checkProof(connectResult.tonProof.proof, connectResult.account);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ton Wallet connection failed:', error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    console.log('Disconnecting wallet...');\r\n    tonConnectUI.disconnect();\r\n    setWallet(null);\r\n    setAddress('');\r\n    setBalance('');\r\n    localStorage.removeItem('wallet');\r\n    TonProofDemoApi.reset();\r\n  };\r\n\r\n  const fetchBalance = async (address) => {\r\n    try {\r\n      console.log('Fetching balance for address:', address);\r\n      const response = await fetch(`https://tonapi.io/v1/account/getInfo?account=${address}`);\r\n      const data = await response.json();\r\n      console.log('Balance fetched:', data.balance);\r\n      return data.balance;\r\n    } catch (error) {\r\n      console.error('Failed to fetch balance:', error);\r\n      return 'N/A';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wallet-connector-container\">\r\n      <div className=\"wallet-connector\">\r\n        {wallet ? (\r\n          <div className=\"wallet-info slide-in\">\r\n            <p>Connected wallet address: {address}</p>\r\n            <p>Your balance: {balance}</p>\r\n            <button className=\"wallet-button\" onClick={disconnectWallet}>\r\n              Disconnect Wallet\r\n            </button>\r\n            <Link to=\"/main\" className=\"auto-redirect-link\" />\r\n          </div>\r\n        ) : (\r\n          <button className=\"wallet-button slide-in-bottom\" onClick={connectWallet}>\r\n            {languages[selectedLanguage]?.[currentLanguageIndex] || languages['en'][currentLanguageIndex]}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}