{"ast":null,"code":"import nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n  SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n  DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\nvar CHAIN;\n(function (CHAIN) {\n  CHAIN[\"MAINNET\"] = \"-239\";\n  CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\nfunction encodeUint8Array(value, urlSafe) {\n  const encoded = nacl.encodeBase64(value);\n  if (!urlSafe) {\n    return encoded;\n  }\n  return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n  if (urlSafe) {\n    value = decodeURIComponent(value);\n  }\n  return nacl.decodeBase64(value);\n}\nfunction encode(value) {\n  let urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let uint8Array;\n  if (value instanceof Uint8Array) {\n    uint8Array = value;\n  } else {\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n    uint8Array = nacl.decodeUTF8(value);\n  }\n  return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value) {\n  let urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n  return {\n    toString() {\n      return nacl.encodeUTF8(decodedUint8Array);\n    },\n    toObject() {\n      try {\n        return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n      } catch (e) {\n        return null;\n      }\n    },\n    toUint8Array() {\n      return decodedUint8Array;\n    }\n  };\n}\nconst Base64 = {\n  encode,\n  decode\n};\nfunction concatUint8Arrays(buffer1, buffer2) {\n  const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n  mergedArray.set(buffer1);\n  mergedArray.set(buffer2, buffer1.length);\n  return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n  if (index >= array.length) {\n    throw new Error('Index is out of buffer');\n  }\n  const subArray1 = array.slice(0, index);\n  const subArray2 = array.slice(index);\n  return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n  let hexString = '';\n  byteArray.forEach(byte => {\n    hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n  });\n  return hexString;\n}\nfunction hexToByteArray(hexString) {\n  if (hexString.length % 2 !== 0) {\n    throw new Error(\"Cannot convert \".concat(hexString, \" to bytesArray\"));\n  }\n  const result = new Uint8Array(hexString.length / 2);\n  for (let i = 0; i < hexString.length; i += 2) {\n    result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n  }\n  return result;\n}\nfunction isNode() {\n  return typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n}\nclass SessionCrypto {\n  constructor(keyPair) {\n    this.nonceLength = 24;\n    this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    this.sessionId = toHexString(this.keyPair.publicKey);\n  }\n  createKeypair() {\n    return nacl$1.box.keyPair();\n  }\n  createKeypairFromString(keyPair) {\n    return {\n      publicKey: hexToByteArray(keyPair.publicKey),\n      secretKey: hexToByteArray(keyPair.secretKey)\n    };\n  }\n  createNonce() {\n    return nacl$1.randomBytes(this.nonceLength);\n  }\n  encrypt(message, receiverPublicKey) {\n    const encodedMessage = new TextEncoder().encode(message);\n    const nonce = this.createNonce();\n    const encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n    return concatUint8Arrays(nonce, encrypted);\n  }\n  decrypt(message, senderPublicKey) {\n    const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n    const decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n    if (!decrypted) {\n      throw new Error(\"Decryption error: \\n message: \".concat(message.toString(), \" \\n sender pubkey: \").concat(senderPublicKey.toString(), \" \\n keypair pubkey: \").concat(this.keyPair.publicKey.toString(), \" \\n keypair secretkey: \").concat(this.keyPair.secretKey.toString()));\n    }\n    return new TextDecoder().decode(decrypted);\n  }\n  stringifyKeypair() {\n    return {\n      publicKey: toHexString(this.keyPair.publicKey),\n      secretKey: toHexString(this.keyPair.secretKey)\n    };\n  }\n}\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };","map":{"version":3,"names":["CONNECT_EVENT_ERROR_CODES","CONNECT_ITEM_ERROR_CODES","SEND_TRANSACTION_ERROR_CODES","SIGN_DATA_ERROR_CODES","DISCONNECT_ERROR_CODES","CHAIN","encodeUint8Array","value","urlSafe","encoded","nacl","encodeBase64","encodeURIComponent","decodeToUint8Array","decodeURIComponent","decodeBase64","encode","arguments","length","undefined","uint8Array","Uint8Array","JSON","stringify","decodeUTF8","decode","decodedUint8Array","toString","encodeUTF8","toObject","parse","e","toUint8Array","Base64","concatUint8Arrays","buffer1","buffer2","mergedArray","set","splitToUint8Arrays","array","index","Error","subArray1","slice","subArray2","toHexString","byteArray","hexString","forEach","byte","hexToByteArray","concat","result","i","parseInt","isNode","process","versions","node","SessionCrypto","constructor","keyPair","nonceLength","createKeypairFromString","createKeypair","sessionId","publicKey","nacl$1","box","secretKey","createNonce","randomBytes","encrypt","message","receiverPublicKey","encodedMessage","TextEncoder","nonce","encrypted","decrypt","senderPublicKey","internalMessage","decrypted","open","TextDecoder","stringifyKeypair"],"sources":["../../src/models/wallet-message/wallet-event/connect-event.ts","../../src/models/wallet-message/wallet-response/send-transaction-rpc-response.ts","../../src/models/wallet-message/wallet-response/sign-data-rpc-response.ts","../../src/models/wallet-message/wallet-response/disconnect-rpc-response.ts","../../src/models/CHAIN.ts","../../src/utils/base64.ts","../../src/utils/binary.ts","../../src/utils/web-api.ts","../../src/crypto/session-crypto.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}